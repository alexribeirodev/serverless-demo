service:
  name: serverless-demo

frameworkVersion: ">=1.0.0 <2.0.0"

plugins:
  - serverless-dynamodb-local
  - serverless-offline

package:
  include:
    - src/**
  exclude:
    - .git/**
    - __tests__/**

custom:
  myStage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  serverless-offline:
    host: 0.0.0.0
    port: 3000
  dynamodb:
    stages:
      - local
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${self:custom.myStage}
  region: ${self:custom.region}
  environment:
    STAGE: ${self:custom.myStage}
    REGION: ${self:custom.region}
    USERS_TABLE: users-${self:custom.myStage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:RemoveItem
      Resource: "*"

functions:
  helloWorld:
    handler: src/endpoints/get.handler
    memorySize: 128
    description: Hello World!
    events:
      - http:
          method: get
          path: /
  usersGet:
    handler: src/endpoints/users/get.handler
    memorySize: 128
    description: Get user by ID
    events:
      - http:
          method: get
          path: /users/{id}
  usersList:
    handler: src/endpoints/users/list.handler
    memorySize: 128
    description: Get all users
    events:
      - http:
          method: get
          path: /users
  usersPost:
    handler: src/endpoints/users/post.handler
    memorySize: 128
    description: Create user
    events:
      - http:
          method: post
          path: /users
  usersPut:
    handler: src/endpoints/users/put.handler
    memorySize: 128
    description: Update user by ID
    events:
      - http:
          method: put
          path: /users/{id}
  usersDelete:
    handler: src/endpoints/users/delete.handler
    memorySize: 128
    description: Delete user by ID
    events:
      - http:
          method: delete
          path: /users/{id}

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.USERS_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
